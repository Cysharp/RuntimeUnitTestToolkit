name: Build-Debug

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  build-unity:
    if: ${{ ((github.event_name == 'push' && github.repository_owner == 'Cysharp') || startsWith(github.event.pull_request.head.label, 'Cysharp:')) && github.triggering_actor != 'dependabot[bot]' }}
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        unity: ["2021.3.41f1", "2022.3.39f1", "6000.0.12f1"] # Test with LTS
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - name: Load secrets
        id: op-load-secret
        uses: 1password/load-secrets-action@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0 # v2.0.0
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_PUBLIC }}
          UNITY_EMAIL: "op://${{ vars.OP_VAULT_ACTIONS_PUBLIC }}/UNITY_LICENSE/username"
          UNITY_PASSWORD: "op://${{ vars.OP_VAULT_ACTIONS_PUBLIC }}/UNITY_LICENSE/credential"
          UNITY_SERIAL: "op://${{ vars.OP_VAULT_ACTIONS_PUBLIC }}/UNITY_LICENSE/serial"

      - uses: Cysharp/Actions/.github/actions/checkout@main

      # Execute scripts: Export Package
      # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod PackageExporter.Export
      - name: Build Unity (.unitypacakge)
        if: ${{ startsWith(matrix.unity, '2021') }} # only execute once
        uses: Cysharp/Actions/.github/actions/unity-builder@main
        env:
          UNITY_EMAIL: ${{ steps.op-load-secret.outputs.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ steps.op-load-secret.outputs.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ steps.op-load-secret.outputs.UNITY_SERIAL }}
        with:
          projectPath: RuntimeUnitTestToolkit
          unityVersion: ${{ matrix.unity }}
          targetPlatform: StandaloneLinux64
          buildMethod: PackageExporter.Export

      - uses: Cysharp/Actions/.github/actions/check-metas@main # check meta files
        with:
          directory: RuntimeUnitTestToolkit

      # Execute Unittest Mono2x (4m 30s)
      # # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod UnitTestBuilder.BuildUnitTest /headless /ScriptBackend Mono2x /BuildTarget StandaloneLinux64
    #   - name: Build UnitTest (Mono2x)
    #     uses: Cysharp/Actions/.github/actions/unity-builder@main
    #     env:
    #       UNITY_EMAIL: ${{ steps.op-load-secret.outputs.UNITY_EMAIL }}
    #       UNITY_PASSWORD: ${{ steps.op-load-secret.outputs.UNITY_PASSWORD }}
    #       UNITY_SERIAL: ${{ steps.op-load-secret.outputs.UNITY_SERIAL }}
    #     with:
    #       projectPath: RuntimeUnitTestToolkit
    #       unityVersion: ${{ matrix.unity }}
    #       targetPlatform: StandaloneLinux64
    #       buildMethod: UnitTestBuilder.BuildUnitTest
    #       customParameters: "/headless /ScriptBackend Mono2x"
    #   - name: Check UnitTest file is generated
    #     run: ls -lR ./RuntimeUnitTestToolkit/bin/UnitTest
    #   - name: Execute UnitTest
    #     run: ./RuntimeUnitTestToolkit/bin/UnitTest/StandaloneLinux64_Mono2x/test

    #   - name: Remove Library
    #     run: sudo rm -rf ./RuntimeUnitTestToolkit/Library

      # Execute Unittest IL2CPP (4m 30s)
      # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod UnitTestBuilder.BuildUnitTest /headless /ScriptBackend IL2CPP /BuildTarget StandaloneLinux64
      - name: Build UnitTest (IL2CPP)
        uses: Cysharp/Actions/.github/actions/unity-builder@main
        env:
          UNITY_EMAIL: ${{ steps.op-load-secret.outputs.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ steps.op-load-secret.outputs.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ steps.op-load-secret.outputs.UNITY_SERIAL }}
        with:
          projectPath: RuntimeUnitTestToolkit
          unityVersion: ${{ matrix.unity }}
          targetPlatform: StandaloneLinux64
          buildMethod: UnitTestBuilder.BuildUnitTest
          customParameters: "/headless /ScriptBackend IL2CPP"
      - name: Check UnitTest file is generated
        run: ls -lR ./RuntimeUnitTestToolkit/bin/UnitTest
      - name: Execute UnitTest
        run: ./RuntimeUnitTestToolkit/bin/UnitTest/StandaloneLinux64_IL2CPP/test

      # Store artifacts.
      - uses: Cysharp/Actions/.github/actions/upload-artifact@main
        if: ${{ startsWith(matrix.unity, '2021') }} # only execute once
        with:
          name: RuntimeUnitTestToolkit.${{ matrix.unity }}.unitypackage.zip
          path: ./RuntimeUnitTestToolkit/*.unitypackage
          retention-days: 1
