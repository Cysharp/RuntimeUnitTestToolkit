version: 2.1
executors:
  unity:
    docker:
      # https://hub.docker.com/r/gableroux/unity3d/tags
      - image: gableroux/unity3d:2019.1.0f2
jobs:
  build-unity:
    executor: unity
    steps:
      - checkout
      # get activation file, if fail to activate unity, use this key and activate from https://license.unity3d.com/manual
      - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -logFile -createManualActivationFile || exit 0
      - run: cat Unity_v2019.1.0f2.alf # file name same as image's version
      # get from UNITY_LICENSE envvar(base64 encoded(cat foo.ulf | base64 )), this file is generated from above manual activation
      - run: echo ${UNITY_LICENSE} | base64 -di  >> .circleci/Unity.ulf
      - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .circleci/Unity.ulf || exit 0
      # Execute scripts(in Linux, currently does not supported IL2CPP so should run on mono)
      - run: apt update && apt install libunwind8 -y
      - run:
          name: Build Linux(Mono)
          command: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod UnitTestBuilder.BuildUnitTest /headless /ScriptBackend Mono2x /BuildTarget StandaloneLinux64
          working_directory: RuntimeUnitTestToolkit
      - run: RuntimeUnitTestToolkit/bin/UnitTest/StandaloneLinux64_Mono2x/test
      - run:
          name: Export unitypackage
          command: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod PackageExporter.Export
          working_directory: RuntimeUnitTestToolkit
      - store_artifacts:
          path: RuntimeUnitTestToolkit/RuntimeUnitTestToolkit.unitypackage
          destination: /RuntimeUnitTestToolkit.unitypackage
workflows:
  version: 2
  build-and-push:
    jobs:
      - build-unity:
          filters:
            tags:
              only: /.*/